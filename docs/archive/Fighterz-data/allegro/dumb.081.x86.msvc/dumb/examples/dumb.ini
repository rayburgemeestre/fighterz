# Please edit this file to control the playback quality for DUMB's example
# programs. Note that this does not affect DUMB when you use it in your own
# programs; you need to borrow some code from the examples themselves in
# order to get that to happen.

# dumb_resampling_quality can range from 0 (fastest) to 4 (best). See
# docs/dumb.txt for details on what the values mean.

# dumb_it_max_to_mix is the maximum number of samples DUMB will render at a
# time. See docs/dumb.txt for a more detailed description.

# Increase buffer_size to combat stuttering.

# The module will be rendered at a sampling frequency specified by
# sound_freq. This variable is also used by Allegro for initialising the
# sound hardware.

# buffer_size and sound_freq are passed directly to al_start_duh(). See this
# function's description in docs/dumb.txt for information about how to use
# these variables.

# You can ignore the quality variable. Allegro uses it when relaying the
# audio stream to the sound card. 2 is the maximum, and is only comparable
# in quality to dumb_resampling_quality = 1. Only a masochist would reduce
# it. This also means that in order to appreciate the higher quality
# settings you have to choose a value for sound_freq that Allegro can use
# exactly. See Allegro's docs, "Standard config variables", for details on
# how this works.

[sound]
dumb_resampling_quality = 4
dumb_it_max_to_mix = 128
buffer_size = 4096
sound_freq = 44100

quality = 2
